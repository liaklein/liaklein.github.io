        /*
         * we got our code and idea from www.theproofistrivial.com
         */

        function randomFromList(list) {
            return list[Math.floor(Math.random() * list.length)];
        }

        function writeLine(fontSize, text) {
            document.write('<p style="font-size:' + fontSize + "px" +
                    '; text-align: center; margin:0; padding:0; border:0">' + text +
                    '</p>');
        }

       var problems = ([
        ["1-planarity"],
        ["3-dimensional matching"],
        ["Bipartite dimension"],
        ["Capacitated minimum spanning tree"],
        ["Route inspection"],
        ["Chinese postman"],
        ["rural postman"],
        ["Clique"],
        ["Complete coloring"],
        ["achromatic number"],
        ["Domatic number"],
        ["Dominating set"],
        ["edge dominating set"],
        ["connected dominating set"],
        ["maximum leaf spanning tree"],
        ["Bandwidth"],
        ["Clique cover"],
        ["Rank coloring"],
        ["cycle rank"],
        ["Degree-constrained spanning tree"],
        ["Exact cover"],
        ["Feedback vertex set"],
        ["Feedback arc set"],
        ["Graph homomorphism"],
        ["Graph coloring"],
        ["Graph partition into subgraphs of triangles"],
        ["Graph partition into subgraphs of isomorphic subgraphs"],
        ["Graph partition into subgraphs of Hamiltonian subgraphs"],
        ["Graph partition into subgraphs of Forests"],
        ["Graph partition into subgraphs of perfect matchings"],
        ["Graph partition into subgraphs of Hamiltonian completion"],
        ["Hamiltonian path"],
        ["Longest path problem"],
        ["Maximum bipartite subgraph"],
        ["maximum cut"],
        ["Maximum independent set"],
        ["Maximum Induced path"],
        ["Graph intersection number"],
        ["Metric dimension of a graph"],
        ["Minimum k-cut"],
        ["Minimum spanning tree"],
        ["Pathwidth"],
        ["Set cover"],
        ["Set splitting"],
        ["Shortest total path length spanning tree"],
        ["Slope number two testing"],
        ["Treewidth"],
        ["Vertex cover"],
        ["3-partition"],
        ["Bin packing"],
        ["Knapsack"],
        ["Bottleneck traveling salesman"],
        ["Integer programming."],
        ["Numerical 3-dimensional matching"],
        ["Partition"],
        ["Quadratic assignment"],
        ["Quadratic programming"],
        ["Subset sum"],
        ["Closest string"],
        ["Longest common subsequence"],
        ["The bounded variant of the Post correspondence"],
        ["Shortest common supersequence"],
        ["String-to-string correction"],
        ["Verbal arithmetic"],
        ["Berth allocation"],
        ["Assembling an optimal Bitcoin block"],
        ["Boolean satisfiability problem (SAT)"],
        ["Conjunctive Boolean query"],
        ["Cyclic ordering"],
        ["Circuit satisfiability"],
        ["Uncapacitated Facility Location"],
        ["Flow Shop Scheduling"],
        ["Generalized assignment"],
        ["Upward planarity testing"],
        ["Hospitals-and-residents problem with couples"],
        ["Job-shop scheduling"],
        ["Monochromatic triangle"],
        ["Minimum maximal independent set a.k.a. minimum independent dominating set"],
        ["Maximum common subgraph isomorphism"],
        ["Minimum degree spanning tree"],
        ["Minimum k-spanning tree"],
        ["Metric k-center"],
        ["Maximum 2-Satisfiability"],
        ["Modal logic S5-Satisfiability"],
        ["Multiprocessor scheduling"],
        ["Maximum volume submatrix"],
        ["Minimal addition chains for sequences"],
        ["Open-shop scheduling"],
        ["Pathwidth"],
        ["interval thickness"],
        ["vertex separation number"],
        ["Pancake sorting distance problem for strings"],
        ["k-Chinese postman"],
        ["Subgraph isomorphism"],
        ["Steiner tree"],
        ["Set packing"],
        ["Serializability of database histories"],
        ["Scheduling to minimize weighted completion time"],
        ["Sparse approximation"],
        ["Block Sorting (Sorting by Block Moves)"],
        ["Second order instantiation"],
        ["Treewidth"],
        ["Three-dimensional Ising model"],
        ["Vehicle routing"],
       ])
        
       var algorithms = ([
        ["A* tree search"],
        ["Bellman-Ford"],
        ["Graph canonization"],
        ["Dijkstra's algorithm"],
        ["Perturbation methods"],
        ["Floyd-Warshall"],
        ["Floyd's cycle-finding"],
        ["Hopcroft–Karp algorithm"],
        ["Kruskal’s minimum spanning tree algorithm"],
        ["Prim's minimum spanning tree algorithm"],
        ["Ford-Fulkerson."],
        ["Edmonds-Karp - Implementation of Ford-Fulkerson."],
        ["Nonblocking Minimal Spanning Switch"],
        ["Hungarian perfect matching algorirthm"],
        ["Coloring algorithm."],
        ["Nearest neighbour."],
        ["Topological sort."],
        ["Tarjan's off-line least common ancestors algorithm"],
        ["Algorithmic version for Szemerédi regularity partition"],
        ["Alpha–beta pruning"],
        ["Aperiodic graph"],
        ["B*"],
        ["Barabási–Albert model"],
        ["Belief propagation"],
        ["Bellman–Ford algorithm"],
        ["Bianconi–Barabási model"],
        ["Bidirectional search"],
        ["Borůvka's algorithm"],
        ["Bottleneck traveling salesman problem"],
        ["Breadth-first search"],
        ["Bron–Kerbosch algorithm"],
        ["Centrality"],
        ["Chaitin's algorithm"],
        ["Christofides algorithm"],
        ["Clique percolation method"],
        ["Closure problem"],
        ["Color-coding"],
        ["Contraction hierarchies"],
        ["Courcelle's theorem"],
        ["Cuthill–McKee algorithm"],
        ["D*"],
        ["Depth-first search"],
        ["Dijkstra's algorithm"],
        ["Dijkstra–Scholten algorithm"],
        ["Dinic's algorithm"],
        ["Disparity filter algorithm of weighted network"],
        ["Double pushout graph rewriting"],
        ["Dulmage–Mendelsohn decomposition"],
        ["Dynamic connectivity"],
        ["Edmonds' algorithm"],
        ["Blossom algorithm"],
        ["Edmonds–Karp algorithm"],
        ["Euler tour technique"],
        ["FKT algorithm"],
        ["Flooding algorithm"],
        ["Flow network"],
        ["Floyd–Warshall algorithm"],
        ["Force-directed graph drawing"],
        ["Ford–Fulkerson algorithm"],
        ["Fringe search"],
        ["Girvan–Newman algorithm"],
        ["Goal node (computer science)"],
        ["Gomory–Hu tree"],
        ["Graph bandwidth"],
        ["Graph edit distance"],
        ["Graph embedding"],
        ["Graph isomorphism"],
        ["Graph isomorphism problem"],
        ["Graph kernel"],
        ["Graph reduction"],
        ["Graph traversal"],
        ["Havel–Hakimi algorithm"],
        ["Hierarchical closeness"],
        ["Hierarchical clustering of networks"],
        ["Hopcroft–Karp algorithm"],
        ["Iterative deepening A*"],
        ["Initial attractiveness"],
        ["Iterative compression"],
        ["Iterative deepening depth-first search"],
        ["Johnson's algorithm"],
        ["Journal of Graph Algorithms and Applications"],
        ["Jump point search"],
        ["Junction tree algorithm"],
        ["K shortest path routing"],
        ["Karger's algorithm"],
        ["Kleitman–Wang algorithms"],
        ["Knight's tour"],
        ["Kosaraju's algorithm"],
        ["Kruskal's algorithm"],
        ["Lexicographic breadth-first search"],
        ["Longest path problem"],
        ["Minimax"],
        ["Minimum bottleneck spanning tree"],
        ["Misra & Gries edge coloring algorithm"],
        ["Nearest neighbour algorithm"],
        ["Network simplex algorithm"],
        ["Nonblocking minimal spanning switch"],
        ["Path-based strong component algorithm"],
        ["Prim's algorithm"],
        ["Proof-number search"],
        ["Push–relabel maximum flow algorithm"],
        ["Reverse-delete algorithm"],
        ["Rocha–Thatte cycle detection algorithm"],
        ["Sethi–Ullman algorithm"],
        ["Shortest Path Faster Algorithm"],
        ["Spectral layout"],
        ["Stoer–Wagner algorithm"],
        ["Subgraph isomorphism problem"],
        ["Suurballe's algorithm"],
        ["Tarjan's off-line lowest common ancestors algorithm"],
        ["Tarjan's strongly connected components algorithm"],
        ["Topological sorting"],
        ["Transitive closure"],
        ["Transitive reduction"],
        ["Travelling salesman problem"],
        ["Tree traversal"],
        ["Widest path problem"],
        ["bipartite graph"],
        ["minimax"],
        ["deep neural networks"],
        ["data mining"],
        ["big data"],
        ["data visualization"],
        ["data analytics"],
        ["the cloud"],
        ["cloud computing"],
        ["wearable technology"],
        ["genetic algorithms"],
        ["baysian networks"],
        ["dynamic programming"],
        ["linear programming"],
        ["divide and conquer algorithms"],
        ["cryptocurrency"],
        ["augmented reality"],
        ["baysian networks"],
        ["metadata"],
        ["relational algebra"],
        ["np-complete"],
        ["the halting problem"],
        ["polymorphism"],
        ["lambda calculus"],
        ["a funtional paradigm"],
        ["operator overloading"],
        ["dynamic programming"],
        ["a Boolean"],
        ["a Character"],
        ["a Floating-point"],
        ["a Double"],
        ["an Integer"],
        ["an Enumerated type"],
        ["an Array"],
        ["a Record"],
        ["a Union"],
        ["a Tagged union"],
        ["a Container"],
        ["a List"],
        ["an Associative array"],
        ["a Multimap"],
        ["a Set"],
        ["a Multiset"],
        ["a Stack"],
        ["a Queue"],
        ["a Double-ended queue"],
        ["a Priority queue"],
        ["a Tree"],
        ["a Graph"],
        ["an Array"],
        ["a Bit array"],
        ["a Bit field"],
        ["a Bitboard"],
        ["a Bitmap"],
        ["a Circular buffer"],
        ["a Control table"],
        ["an Image"],
        ["a Dope vector"],
        ["a Dynamic array"],
        ["a Gap buffer"],
        ["a Hashed array tree"],
        ["a Heightmap"],
        ["a Lookup table"],
        ["a Matrix"],
        ["a Parallel array"],
        ["a Sorted array"],
        ["a Sparse array"],
        ["a Sparse matrix"],
        ["a Iliffe vector"],
        ["a Variable-length array"],
        ["a Doubly linked list"],
        ["an Array list"],
        ["a Linked list"],
        ["a Self-organizing list"],
        ["a Skip list"],
        ["an Unrolled linked list"],
        ["a VList"], 
        ["Operator overloading"],
        ["Polymorphism"],
        ["Procedural (imperativ) programming"],
        ["Declarative programming"],
        ["Functional programming"],
        ["Object-oriented programming "],
        ["Referential transparency"],
        ["Function object (functor)"],
        ["Lambda calculus"],
        ["Currying"],
        ["Design patterns"],
        ["Container"],
        ["Iterator"],
        ["Abstract data type"],
        ["Multiple dispatch"],
        ["Higher-order function"],
        ["Reflection"],
        ["Name binding"],
        ["Lazy evaluation"],
        ["Parser"],
        ["Lexical analysis"],
        ["Regular expression "],
        ["Context-free grammar"],
        ["Byte-code"],
        ["Complexity Metrics and Models"],     
        ["Alpha-beta."],
        ["Ant-algorithms."],
        ["CLA. Cortical Learning Algorithm."],
        ["DE (Differential evolution)"],
        ["Sentiment analysis."],
        ["Epitome."],
        ["Counting objects in an image."],
        ["Deep Dense Face Detector."],
        ["Evolution-Constructed Features."],
        ["Tracking-Learning Detection."],
        ["Fitness proportionate selection."],
        ["Truncation selection."],
        ["Tournament selection."],
        ["Stochastic universal sampling. "],
        ["Hopfield net."],
        ["Backpropagation."],
        ["Self-organizing map (Kohonen map)."],
        ["Multiplicative Weights."],
        ["Burrows-Wheeler transform."],
        ["Deflate"],
        ["Delta encoding."],
        ["Incremental encoding"],
        ["PPM (Prediction by Partial Matching)."],
        ["Shannon-Fano coding."],
        ["Truncated binary."],
        ["Run-length encoding."],
        ["EZW (Embedded Zerotree Wavelet)."],
        ["Entropy encoding"],
        ["Huffman coding."],
        ["Adaptive Huffman coding."],
        ["Arithmetic coding."],
        ["Range encoding."],
        ["Unary coding."],
        ["Elias delta, gamma, omega coding."],
        ["Fibonacci coding."],
        ["Golomb coding."],
        ["Rice coding."],
        ["Lossy compression algorithms"],
        ["Linear predictive coding."],
        ["A-law algorithm."],
        ["Mu-law algorithm."],
        ["Fractal compression."],
        ["Transform coding."],
        ["Vector quantization."],
        ["Wavelet compression."],
        ["deep neural networks"],
        ["data mining"],
        ["big data"],
        ["data visualization"],
        ["data analytics"],
        ["the cloud"],
        ["cloud computing"],
        ["wearable technology"],
        ["genetic algorithms"],
        ["baysian networks"],
        ["dynamic programming"],
        ["linear programming"],
        ["divide and conquer algorithms"],
        ["cryptocurrency"],
        ["augmented reality"],
        ["baysian networks"],
        ["metadata"],
        ["relational algebra"],
        ["np-complete"],
        ["the halting problem"],
        ["polymorphism"],
        ["lambda calculus"],
        ["a funtional paradigm"],
        ["operator overloading"],
        ["Data Encryption Standard (DES), formerly DE Algorithm."],
        ["IDEA (International Data Encryption Algorithm)"],
        ["PES (Proposed Encryption Standard)"],
        ["DSA (Digital Signature Algorithm)"],
        ["ElGamal"],
        ["RSA"],
        ["Diffie-Hellman (Merkle) key exchange"],
        ["RIPEMD (RACE Integrity Primitives Evaluation Message Digest)."],
        ["SHA-1 (Secure Hash Algorithm)"],
        ["keyed-hash message authentication."],
        ["Secret sharing"],
        ["Secret Splitting"],
        ["Key Splitting"],
        ["Shamir's secret sharing scheme"],
        ["Blakley's secret sharing scheme"],
        ["Subset sum"],
        ["Shor's algorithm"],
         ["GP (Accelerated Graphics Port)"],
        ["BASIC (Beginner's All-purpose Symbolic Instruction Code)"],
        ["cache"],
        ["CD-R (Compact Disc-Recordable)"],
        ["CD-RW (Compact Disc-ReWritable)"],
        ["CD-ROM (Compact Disc Read-Only Memory)"],
        ["integrated circuit"],
        ["control store"],
        ["core memory"],
        ["CPU (Central processing unit)"],
        ["Conventional PCI (Conventional Peripheral Component Interconnect)"],
        ["Computer form factor"],
        ["Chipset"],
        ["Channel I/O"],
        ["DVD (Digital Video Disc or Digital Versatile Disc)"],
        ["DASD (Direct Access Storage Device)"],
        ["DIMM (dual in-line memory module)"],
        ["DisplayPort"],
        ["DVI - Digital Visual Interface"],
        ["DRAM (Dynamic random-access memory)"],
        ["Firewall"],
        ["firmware"],
        ["floppy disk drive"],
        ["Flash Memory"],
        ["HDMI (High-Definition Multimedia Interface)"],
        ["mainframe"],
        ["motherboard"],
        ["Mini-VGA"],
        ["Microcode"],
        ["Mask ROM"],
        ["Non-volatile memory"],
        ["Non-volatile random-access memory"],
        ["optical disc drive"],
        ["Operation code"],
        ["PSU (power supply unit)"],
        ["PROM (Programmable Read-Only Memory)"],
        ["PCIe (Peripheral Component Interconnect Express)"],
        ["RAID (Redundant Array of Independent Disks)"],
        ["RAM (random-access memory)"],
        ["ROM (Read Only Memory)"],
        ["SIMM (single in-line memory module)"],
        ["Solid-state drive (or solid-state disk or electronic disk)"],
        ["SRAM (Static random-access memory)"],
        ["SDRAM (Synchronous dynamic random access memory)"],
        ["tape drive"],
        ["USB (Universal Serial Bus)"],
        ["VGA (Video Graphics Array)"],
        ["Volatile memory"],       
        ])

        var Problem = randomFromList(problems)
        var Algorithm = randomFromList(algorithms);
        writeLine(40, "The algorithm is simple! Just reduce it to a");
        writeLine(70, Problem);
        writeLine(40,"problem")
        writeLine(40, "then implement it with");
        writeLine(70, Algorithm);
    
